function [x] = FSM_FIR_VHDL()
% Apertura de archivo VHDL
fid = fopen('FSM_FIR.vhd','wt');
fprintf(fid,'library ieee;\n\n');
fprintf(fid,'use IEEE.std_logic_1164.all;\n');
fprintf(fid,'use IEEE.std_logic_unsigned.all;\n\n');
fprintf(fid,'entity FSM_FIR is\n');
fprintf(fid,'\tport(\n');
fprintf(fid,'\tCLK   :\tin std_logic;\n');
fprintf(fid,'\tRST   :\tin std_logic;\n');
fprintf(fid,'\tSTP   :\tin std_logic;\n');
fprintf(fid,'\tEOPMAC:\tin std_logic;\n');
fprintf(fid,'\tSTPMAC:\tout std_logic;\n');
fprintf(fid,'\tH     :\tout std_logic;\n');
fprintf(fid,'\tEOP   :\tout std_logic\n\t);\n');
fprintf(fid,'end FSM_FIR;\n\n');
fprintf(fid,'architecture FSM of FSM_FIR is\n');
fprintf(fid,'type FSM_STATES is (S0,S1,S2,S3);\n');
fprintf(fid,'signal Qp,Qn:FSM_STATES;\n');
fprintf(fid,'begin\n\n');
fprintf(fid,'\tCombinacional: process(Qp,STP,EOPMAC)\n');
fprintf(fid,'\tbegin\n');
fprintf(fid,'\t\tcase Qp is\n');
fprintf(fid,'\t\t\twhen S0 =>\n');
fprintf(fid,'\t\t\t\tif (STP=%c1%c) then\n','''','''');
fprintf(fid,'\t\t\t\t\tQn <= S1;\n');
fprintf(fid,'\t\t\t\telse\n');
fprintf(fid,'\t\t\t\t\tQn <= S0;\n');
fprintf(fid,'\t\t\t\tend if;\n');
fprintf(fid,'\t\t\t\tSTPMAC <= %c0%c;\n','''','''');
fprintf(fid,'\t\t\t\tH      <= %c0%c;\n','''','''');
fprintf(fid,'\t\t\t\tEOP    <= %c1%c;\n','''','''');
fprintf(fid,'\t\t\twhen S1 =>\n');
fprintf(fid,'\t\t\t\tif (EOPMAC=%c0%c) then\n','''','''');
fprintf(fid,'\t\t\t\t\tQn <= S2;\n');
fprintf(fid,'\t\t\t\telse\n');
fprintf(fid,'\t\t\t\t\tQn <= S1;\n');
fprintf(fid,'\t\t\t\tend if;\n');
fprintf(fid,'\t\t\t\tSTPMAC <= %c1%c;\n','''','''');
fprintf(fid,'\t\t\t\tH      <= %c0%c;\n','''','''');
fprintf(fid,'\t\t\t\tEOP    <= %c0%c;\n','''','''');
fprintf(fid,'\t\t\twhen S2 =>\n');
fprintf(fid,'\t\t\t\tif (EOPMAC=%c1%c) then\n','''','''');
fprintf(fid,'\t\t\t\t\tQn <= S3;\n');
fprintf(fid,'\t\t\t\telse\n');
fprintf(fid,'\t\t\t\t\tQn <= S2;\n');
fprintf(fid,'\t\t\t\tend if;\n');
fprintf(fid,'\t\t\t\tSTPMAC <= %c0%c;\n','''','''');
fprintf(fid,'\t\t\t\tH      <= %c0%c;\n','''','''');
fprintf(fid,'\t\t\t\tEOP    <= %c0%c;\n','''','''');
fprintf(fid,'\t\t\twhen others =>\n');
fprintf(fid,'\t\t\t\tQn     <= S0;\n');
fprintf(fid,'\t\t\t\tSTPMAC <= %c0%c;\n','''','''');
fprintf(fid,'\t\t\t\tH      <= %c1%c;\n','''','''');
fprintf(fid,'\t\t\t\tEOP    <= %c0%c;\n','''','''');
fprintf(fid,'\t\tend case;\n');
fprintf(fid,'\tend process Combinacional;\n\n');
fprintf(fid,'\tSecuencial: process(CLK,RST)\n');
fprintf(fid,'\tbegin\n');
fprintf(fid,'\t\tif (RST=%c0%c) then\n','''','''');
fprintf(fid,'\t\t\tQp <= S0;\n');
fprintf(fid,'\t\telsif (CLK%cevent and CLK=%c1%c) then\n','''','''','''');
fprintf(fid,'\t\t\tQp <= Qn;\n');
fprintf(fid,'\t\tend if;\n');
fprintf(fid,'\tend process Secuencial;\n\n');
fprintf(fid,'end FSM;');
fclose(fid);
x=1;
end